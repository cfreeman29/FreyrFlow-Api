<!DOCTYPE html>
<html>
<head>
  <title>API Routes</title>
  <link rel="stylesheet" type="text/css" href="/styles.css">
</head>
<body>
  <%- include('navbar') %>
  <div class="container">
    <div class="header">
      <h1>API Routes</h1>
    </div>
    <table>
      <thead>
        <tr>
          <th>Path</th>
          <th>Endpoint</th>
          <th>Bearer Token</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% apiConfigs.forEach((config) => { %>
          <tr>
            <td><%= config.path %></td>
            <td><%= config.endpoint %></td>
            <td>
              <span class="hidden-token" data-config-id="<%= config._id %>">*************</span>
              <span class="visible-token" data-config-id="<%= config._id %>" style="display: none;"><%= config.bearer_token || '' %></span>
            </td>
            <td class="actions-cell">
              <button class="toggle-btn" data-config-id="<%= config._id %>">Show Token</button>
              <button class="delete-btn" data-config-id="<%= config._id %>">Delete</button>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
    <div id="successMessage" class="success-message hidden"></div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Client-side JavaScript to handle toggle functionality
      const toggleButtons = document.querySelectorAll('.toggle-btn');
      
      toggleButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          const configId = this.getAttribute('data-config-id');
          const hiddenToken = document.querySelector(`.hidden-token[data-config-id="${configId}"]`);
          const visibleToken = document.querySelector(`.visible-token[data-config-id="${configId}"]`);
          
          if (hiddenToken.style.display === 'none') {
            hiddenToken.style.display = 'inline';
            visibleToken.style.display = 'none';
            this.textContent = 'Show Token';
          } else {
            hiddenToken.style.display = 'none';
            visibleToken.style.display = 'inline';
            this.textContent = 'Hide Token';
          }
        });
      });
      
      // Client-side JavaScript to handle delete functionality
      const deleteButtons = document.querySelectorAll('.delete-btn');
      
      deleteButtons.forEach(function(button) {
        button.addEventListener('click', function() {
          const configId = this.getAttribute('data-config-id');
          const confirmDelete = confirm('Are you sure you want to delete this API configuration?');
          
          if (confirmDelete) {
            fetch('/delete-api', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ configId: configId })
            })
            .then(response => response.json())
            .then(result => {
              if (result.success) {
                // Reload the page with deleteSuccess query parameter
                window.location.href = '/apis?deleteSuccess=true';
              } else {
                alert('Failed to delete API configuration');
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred while deleting the API configuration');
            });
          }
        });
      });
      
      // Display success message if deleteSuccess query parameter is present
      const urlParams = new URLSearchParams(window.location.search);
      const deleteSuccess = urlParams.get('deleteSuccess');
      const successMessage = document.getElementById('successMessage');
      
      if (deleteSuccess === 'true') {
        successMessage.textContent = 'API configuration deleted successfully!';
        successMessage.classList.remove('hidden');
        setTimeout(() => {
          successMessage.classList.add('hidden');
          window.history.replaceState({}, document.title, '/apis');
        }, 3000);
      }
    });
  </script>
</body>
</html>